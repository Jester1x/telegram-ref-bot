import os
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackContext, CallbackQueryHandler

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', 
    level=logging.INFO
)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞
TOKEN = os.environ.get("BOT_TOKEN")
REF_LINK = "https://www.tbank.ru/baf/7Yzkluz5kaS"  # –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –í–ê–®–£ –°–°–´–õ–ö–£
SUPPORT_USERNAME = "@otututu"  # –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –í–ê–® USERNAME

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ç–æ–∫–µ–Ω–∞
if not TOKEN:
    logging.error("‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
    logging.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é BOT_TOKEN –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö Railway")
    exit(1)
else:
    logging.info(f"‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω. –î–ª–∏–Ω–∞: {len(TOKEN)} —Å–∏–º–≤–æ–ª–æ–≤")

async def start(update: Update, context: CallbackContext) -> None:
    user = update.effective_user
    
    welcome_text = f"""
üëã –ü—Ä–∏–≤–µ—Ç, {user.first_name}!

–Ø –ø–æ–º–æ–≥–∞—é –ø–æ–ª—É—á–∏—Ç—å 1000 —Ä—É–±–ª–µ–π –∑–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã T-Bank Black.

üí∞ *–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:*
‚Ä¢ –¢—ã –ø–æ–ª—É—á–∞–µ—à—å 500‚ÇΩ –æ—Ç –±–∞–Ω–∫–∞ –∑–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã
‚Ä¢ –ü–ª—é—Å 500‚ÇΩ –æ—Ç –º–µ–Ω—è –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–π –ø–æ–∫—É–ø–∫–∏
‚Ä¢ –ò—Ç–æ–≥–æ: 1000‚ÇΩ –Ω–∞ —Ä—É–∫–∏!

üìã *–ü—Ä–µ–∂–¥–µ —á–µ–º –Ω–∞—á–∞—Ç—å, –æ–∑–Ω–∞–∫–æ–º—å—Å—è —Å —É—Å–ª–æ–≤–∏—è–º–∏ –Ω–∞—à–µ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞:*
    """
    
    keyboard = [
        [InlineKeyboardButton("üìÑ –ü–æ–∫–∞–∑–∞—Ç—å —É—Å–ª–æ–≤–∏—è", callback_data='show_terms')],
        [InlineKeyboardButton("üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞", url=f'https://t.me/{SUPPORT_USERNAME[1:]}')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(welcome_text, reply_markup=reply_markup, parse_mode='Markdown')

async def show_terms(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    await query.answer()
    
    terms_text = """
*‚úÖ –£—Å–ª–æ–≤–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞ –∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏*

*–ù–∞–∂–∏–º–∞—è ¬´–Ø —Å–æ–≥–ª–∞—Å–µ–Ω¬ª, –≤—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ, —á—Ç–æ:*

üîí *–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏:*
‚Ä¢ –ú—ã –ù–ï –ø–µ—Ä–µ–¥–∞–µ–º –≤–∞—à–∏ –ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º
‚Ä¢ –ú—ã –ù–ï –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤–∞—à—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∫–æ—Ä—ã—Å—Ç–Ω—ã—Ö —Ü–µ–ª—è—Ö
‚Ä¢ –í–∞—à username –∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –≤—ã–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ò–°–ö–õ–Æ–ß–ò–¢–ï–õ–¨–ù–û –¥–ª—è —É—á–µ—Ç–∞ –≤—ã–ø–ª–∞—Ç
‚Ä¢ –í—Å–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª—è—é—Ç—Å—è –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –Ω–∞—à–∏—Ö –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤

üìã *–£—Å–ª–æ–≤–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞:*
1. –í—ã –¥–µ–π—Å—Ç–≤—É–µ—Ç–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –¥–æ–±—Ä–æ–≤–æ–ª—å–Ω–æ, –±–µ–∑ –ø—Ä–∏–Ω—É–∂–¥–µ–Ω–∏—è
2. –í—ã –æ–∑–Ω–∞–∫–æ–º–∏–ª–∏—Å—å —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏ –∞–∫—Ü–∏–∏ –±–∞–Ω–∫–∞
3. –í—ã –ø–æ–Ω–∏–º–∞–µ—Ç–µ —Å—Ö–µ–º—É –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–π (1000‚ÇΩ –≤–∞–º, 2500‚ÇΩ –º–Ω–µ)
4. –í—ã –æ—Å–æ–∑–Ω–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ —á–∞—Å—Ç–Ω–∞—è –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–∞, –∞ –Ω–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –±–∞–Ω–∫–∞
5. –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–æ–∏—Ö –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞—á–∏—Å–ª–µ–Ω–∏—è –±–æ–Ω—É—Å–∞ –æ—Ç –±–∞–Ω–∫–∞

üí° *–ß–µ—Å—Ç–Ω–æ–µ –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ, –≥–¥–µ –∫–∞–∂–¥—ã–π –ø–æ–ª—É—á–∞–µ—Ç —Å–≤–æ—é –≤—ã–≥–æ–¥—É –≤ —Ä–∞–º–∫–∞—Ö –∞–∫—Ü–∏–∏ –±–∞–Ω–∫–∞.*
    """
    
    keyboard = [
        [InlineKeyboardButton("‚úÖ –Ø —Å–æ–≥–ª–∞—Å–µ–Ω —Å–æ –≤—Å–µ–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏", callback_data='get_link')],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='back_to_start')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(terms_text, reply_markup=reply_markup, parse_mode='Markdown')

async def get_link(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    await query.answer()
    
    instruction_text = f"""
üéâ –û—Ç–ª–∏—á–Ω–æ! –í–æ—Ç –≤–∞—à–∞ —Å—Å—ã–ª–∫–∞ –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è:

{REF_LINK}

üìù *–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:*
1. *–û—Ñ–æ—Ä–º–∏—Ç–µ –∫–∞—Ä—Ç—É* –ø–æ —Å—Å—ã–ª–∫–µ –≤—ã—à–µ
2. *–°–æ–≤–µ—Ä—à–∏—Ç–µ –ø–æ–∫—É–ø–∫—É* –æ—Ç 500‚ÇΩ (–ù–ï: –ñ–ö–•, —Å–≤—è–∑—å, –ø–µ—Ä–µ–≤–æ–¥—ã)
3. *–ü—Ä–∏—à–ª–∏—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç* –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–∫—É–ø–∫–∏ –≤ —ç—Ç–æ—Ç —á–∞—Ç
4. *–ü–æ–ª—É—á–∏—Ç–µ 500‚ÇΩ* –æ—Ç –º–µ–Ω—è –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤ –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏

‚ö†Ô∏è *–í–∞–∂–Ω–æ:* –∫–∞—Ä—Ç–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞ –∏–º–µ–Ω–Ω–æ –ø–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ!
    """
    
    keyboard = [
        [InlineKeyboardButton("üì± –Ø –æ—Ñ–æ—Ä–º–∏–ª –∫–∞—Ä—Ç—É –∏ —Å–æ–≤–µ—Ä—à–∏–ª –ø–æ–∫—É–ø–∫—É", callback_data='instruction')],
        [InlineKeyboardButton("üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞", url=f'https://t.me/{SUPPORT_USERNAME[1:]}')],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='show_terms')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(instruction_text, reply_markup=reply_markup, parse_mode='Markdown')

async def instruction(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    await query.answer()
    
    instruction_text = """
üì∏ *–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è 500‚ÇΩ –ø—Ä–∏—à–ª–∏—Ç–µ —Å—é–¥–∞:*
1. *–°–∫—Ä–∏–Ω—à–æ—Ç* –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –±–∞–Ω–∫–∞, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–∏–π –ø–æ–∫—É–ø–∫—É
2. *–í–∞—à–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã* –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ (–Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã/—Ç–µ–ª–µ—Ñ–æ–Ω–∞)

üïê *–í—ã–ø–ª–∞—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤* –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏.

‚ùì *–ß—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤–∏–¥–Ω–æ –Ω–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–µ:*
- –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –æ–ø–µ—Ä–∞—Ü–∏–∏
- –°—É–º–º–∞ –ø–æ–∫—É–ø–∫–∏ (–æ—Ç 500‚ÇΩ)
- –ù–µ –≤–∏–¥–Ω–æ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–∑–∞–º–∞–∂—å—Ç–µ CVV, –ø–æ–ª–Ω—ã–π –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã)
    """
    
    keyboard = [
        [InlineKeyboardButton("üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞", url=f'https://t.me/{SUPPORT_USERNAME[1:]}')],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='get_link')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(instruction_text, reply_markup=reply_markup, parse_mode='Markdown')

async def back_to_start(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    await query.answer()
    # –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–∞—á–∞–ª—å–Ω—ã–º –º–µ–Ω—é
    user = query.from_user
    
    welcome_text = f"""
üëã –ü—Ä–∏–≤–µ—Ç, {user.first_name}!

–Ø –ø–æ–º–æ–≥–∞—é –ø–æ–ª—É—á–∏—Ç—å 1000 —Ä—É–±–ª–µ–π –∑–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã T-Bank Black.

üí∞ *–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:*
‚Ä¢ –¢—ã –ø–æ–ª—É—á–∞–µ—à—å 500‚ÇΩ –æ—Ç –±–∞–Ω–∫–∞ –∑–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã
‚Ä¢ –ü–ª—é—Å 500‚ÇΩ –æ—Ç –º–µ–Ω—è –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–π –ø–æ–∫—É–ø–∫–∏
‚Ä¢ –ò—Ç–æ–≥–æ: 1000‚ÇΩ –Ω–∞ —Ä—É–∫–∏!

üìã *–ü—Ä–µ–∂–¥–µ —á–µ–º –Ω–∞—á–∞—Ç—å, –æ–∑–Ω–∞–∫–æ–º—å—Å—è —Å —É—Å–ª–æ–≤–∏—è–º–∏ –Ω–∞—à–µ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞:*
    """
    
    keyboard = [
        [InlineKeyboardButton("üìÑ –ü–æ–∫–∞–∑–∞—Ç—å —É—Å–ª–æ–≤–∏—è", callback_data='show_terms')],
        [InlineKeyboardButton("üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞", url=f'https://t.me/{SUPPORT_USERNAME[1:]}')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(welcome_text, reply_markup=reply_markup, parse_mode='Markdown')

def main() -> None:
    try:
        logging.info("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
        application = Application.builder().token(TOKEN).build()
        
        application.add_handler(CommandHandler("start", start))
        application.add_handler(CallbackQueryHandler(show_terms, pattern='show_terms'))
        application.add_handler(CallbackQueryHandler(get_link, pattern='get_link'))
        application.add_handler(CallbackQueryHandler(instruction, pattern='instruction'))
        application.add_handler(CallbackQueryHandler(back_to_start, pattern='back_to_start'))
        
        logging.info("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∏ –æ–∂–∏–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π")
        application.run_polling()
        
    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
        exit(1)

if __name__ == '__main__':
    main()
    
    application.run_polling()

if __name__ == '__main__':
    main()
